name: Java CI (Gradle + Codecov)

on:
  # main 브랜치 대상으로 만든 PR 에서만 실행
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      SPRING_PROFILES_ACTIVE: test

    steps:
      # 1. 소스 체크아웃
      - name: Source CheckOut
        uses: actions/checkout@v4

      # 2. JDK 17 설치 + Gradle 캐시
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle   # Gradle 종속성 캐싱 설정

      # 3. Gradle wrapper 실행 권한 부여 (Linux/macOS용)
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # 4. GitHub Actions 시크릿 및 변수를 통한 .env 생성
      - name: Generate .env file
        run: |
          echo "AWS_S3_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }}" >> .env
          echo "AWS_S3_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }}" >> .env
          echo "AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET }}" >> .env
          echo "AWS_S3_REGION=${{ vars.AWS_REGION }}" >> .env
          echo "AWS_S3_PRESIGNED_URL_EXPIRATION=600" >> .env

      # 5. 단위 테스트 + JaCoCo 커버리지 리포트 생성
      - name: Run tests
        run: |
          ./gradlew clean test jacocoTestReport

      # 6. Codecov 로 커버리지 업로드
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: build/reports/jacoco/test/jacocoTestReport.xml
          fail_ci_if_error: true                # 업로드 실패 시 워크플로 실패 처리